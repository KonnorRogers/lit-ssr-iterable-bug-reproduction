/**
 * @license
 * Copyright 2022 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
import { executeServerCommand } from '@web/test-runner-commands';
import { hydrateShadowRoots } from '@webcomponents/template-shadowroot';
import { hydrate as hydrateFunc } from '@lit-labs/ssr-client';
import { createContainer } from './fixture-wrapper.js';
import { litSsrPluginCommand } from '../constants.js';
import { nextFrame } from '../utils.js';
/**
 * Renders the provided Lit template server-side by executing a custom command
 * for Web Test Runner provided by the Lit SSR Plugin, loads it to the document
 * and (optionally) hydrates it, returning the element.
 *
 * This module **must** be imported before any custom element definitions.
 */
export async function ssrFixture(template, { modules, base, hydrate = true }) {
    if (base === undefined) {
        // Find the test file url from the call stack
        // Chrome:
        // Error
        // at ssrFixture (http://localhost:8000/node_modules/@lit-labs/testing/lib/fixtures/ssrFixture.js:29:17)
        // at ssrHydratedFixture (http://localhost:8000/node_modules/@lit-labs/testing/lib/fixtures/ssrFixture.js:76:12)
        // at o.<anonymous> (http://localhost:8000/test/my-element_test.js?wtr-session-id=GhB4vW1TXWxXwqgt3F8QD:65:30)
        //
        // Firefox:
        // ssrFixture@http://localhost:8000/node_modules/@lit-labs/testing/lib/fixtures/ssrFixture.js:29:17
        // ssrHydratedFixture@http://localhost:8000/node_modules/@lit-labs/testing/lib/fixtures/ssrFixture.js:76:12
        // @http://localhost:8000/test/my-element_test.js?wtr-session-id=NaCljZAFiyeOoV6-qBqwr:65:30
        //
        // Webkit:
        // @http://localhost:8000/node_modules/@lit-labs/testing/lib/fixtures/ssrFixture.js:29:26
        // asyncFunctionResume@[native code]
        // asyncFunctionResume@[native code]
        // @http://localhost:8000/test/my-element_test.js?wtr-session-id=aKWON-wBOBGyzb2CwIvmK:65:37
        const { stack } = new Error();
        const match = stack?.match(/http:\/\/localhost.+(?=\?wtr-session-id)/);
        if (!match) {
            throw new Error(`Could not find call site for ssrFixture in stack:\n${stack}`);
        }
        base = match[0];
    }
    const rendered = await executeServerCommand(litSsrPluginCommand, {
        template,
        modules: modules.map((module) => new URL(module, base).pathname),
    });
    const container = createContainer();
    if (HTMLTemplateElement.prototype.hasOwnProperty('shadowRootMode') &&
        'setHTMLUnsafe' in Element.prototype) {
        // Browser natively supports Declarative Shadow DOM and `setHTMLUnsafe()`
        // which is needed for DSD to be parsed and attached.
        container.setHTMLUnsafe(rendered);
    }
    else {
        // Utilize ponyfill
        container.innerHTML = rendered;
        hydrateShadowRoots(container);
    }
    const el = container.firstElementChild;
    if (hydrate) {
        if (el?.hasAttribute('defer-hydration')) {
            el.removeAttribute('defer-hydration');
            await el.updateComplete;
        }
        else {
            hydrateFunc(template, container);
            const litEl = container.querySelector('[defer-hydration]');
            if (litEl) {
                litEl.removeAttribute('defer-hydration');
                await litEl.updateComplete;
            }
            else {
                await nextFrame();
            }
        }
    }
    return el;
}
/**
 * Renders the provided Lit template server-side by executing a custom command
 * for Web Test Runner provided by the Lit SSR Plugin, loads it to the document
 * and hydrates it, returning the element.
 *
 * This module **must** be imported before any custom element definitions.
 */
export async function ssrHydratedFixture(template, { modules, base }) {
    return ssrFixture(template, { modules, base, hydrate: true });
}
/**
 * Renders the provided Lit template server-side by executing a custom command
 * for Web Test Runner provided by the Lit SSR Plugin, loads it to the document
 * **without** hydrating it, returning the element.
 *
 * This module **must** be imported before any custom element definitions.
 */
export async function ssrNonHydratedFixture(template, { modules, base }) {
    return ssrFixture(template, { modules, base, hydrate: false });
}
//# sourceMappingURL=ssr-fixture.js.map