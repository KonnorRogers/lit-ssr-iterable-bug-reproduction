{"version":3,"file":"worker.js","sourceRoot":"","sources":["../src/lib/worker.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAC,UAAU,EAAE,UAAU,EAAC,MAAM,gBAAgB,CAAC;AACtD,OAAO,EAAC,MAAM,EAAC,MAAM,eAAe,CAAC;AAIrC,IAAI,UAAU,KAAK,IAAI,EAAE,CAAC;IACxB,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;AACnE,CAAC;AAED,MAAM,EAAC,QAAQ,EAAE,OAAO,EAAC,GAAG,UAAqB,CAAC;AAElD,MAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAE3D,2EAA2E;AAC3E,2EAA2E;AAC3E,+CAA+C;AAC/C,kHAAkH;AAClH,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;AAChC,OAA8C,CAAC,GAAG,GAAG,OAAO,CAAC;AAE9D,IAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,EAAC,GAAG,QAAQ,EAAE,OAAO,EAAC,EAAE,EAAC,cAAc,EAAE,IAAI,EAAC,CAAC,EAAE,CAAC;IACzE,QAAQ,IAAI,GAAG,CAAC;AAClB,CAAC;AAED,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {parentPort, workerData} from 'worker_threads';\nimport {render} from '@lit-labs/ssr';\n\nimport type {Payload} from './lit-ssr-plugin.js';\n\nif (parentPort === null) {\n  throw new Error('worker.js must only be run in a worker thread');\n}\n\nconst {template, modules} = workerData as Payload;\n\nawait Promise.all(modules.map((module) => import(module)));\n\n// Dangerously spoof TemplateStringsArray by adding back the `raw` property\n// property which gets stripped during serialization of the TemplateResult.\n// This is needed to get through the check here\n// https://github.com/lit/lit/blob/1fbd2b7a1e6da09912f5c681d2b6eaf1c4920bb4/packages/lit-html/src/lit-html.ts#L867\nconst strings = template.strings;\n(strings as {raw: TemplateStringsArray['raw']}).raw = strings;\n\nlet rendered = '';\nfor (const str of render({...template, strings}, {deferHydration: true})) {\n  rendered += str;\n}\n\nparentPort.postMessage(rendered);\n"]}